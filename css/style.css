/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/*Universal Selector
Section used to clear all padding and margin that we do not want*/
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  /*border-box makes it so that the border and padding are not added to the total width/height of the box
  eg: if padding is 2px and we set width to 4px, the actual width will be 2px without border-box*/
  box-sizing: inherit;
}

html {
  /*
  set the root font-size so that rem refers to this
  default font-size is 16, since we want 10px, we do 62.5% of 16px
  */
  font-size: 62.5%;
}

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 1.6rem;
  line-height: 1.7;
  color: #777;
  padding: 3rem;
  box-sizing: border-box;
}

/*header is the class that contains everything in header*/
.header {
  /*vh means view point, the size of the element changes with respect to the viewpoint of the user*/
  height: 95vh;
  /*background images are ordered left to right separated by a comma, left being desplayed on top of the images on the right*/
  background-image: linear-gradient(
      to right bottom,
      rgba(128, 214, 113, 0.8),
      #28b485
    ),
    url(../img/hero.jpg);
  /*covers the entire element/class */
  background-size: cover;
  background-position: top;
  /*must be set to relative for other elements inside it to have position with respect to it*/
  position: relative;
  /*makes a polygon, coordinates start from the top left clockwise*/
  clip-path: polygon(0 0, 100% 0, 100% 75%, 0 100%);
}

/*logo box contains the logo picture*/
.header__logo-box {
  /*positon is absolute with respect to the parent box that must be set to relative*/
  position: absolute;
  top: 4rem;
  left: 4rem;
}

/*the actual logo*/
.header__logo {
  height: 3.5rem;
}

.header__text-box {
  position: absolute;
  /*with respect to the header element*/
  top: 40%;
  left: 50%;
  /*with respect to the logo-box (own element)*/
  transform: translate(-50%, -50%);
  text-align: center;
}

.heading-primary {
  color: #ffffff;
  text-transform: uppercase;

  /*fixes shaky animation of the header test*/
  backface-visibility: hidden;
  margin-bottom: 6rem;
}

/*A span element is by default an inline element*/
.heading-primary--main {
  /*We want this to be a block element because block elements occupy its entire dimensions given and it has line breaks before and after them*/
  display: block;
  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 3.5rem;

  animation-name: moveInLeft;
  animation-duration: 2s;
  animation-timing-function: ease-out;

  /*animation-iteration-count: 3;*/
  /* animation-delay: 3s;*/
}

.heading-primary--sub {
  display: block;
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: 1.74rem;

  animation: moveInRight 2s ease-out;
}

/*animations*/
@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem);
  }
  80% {
    transform: translateX(2rem);
  }
  100% {
    transform: translateX(0rem);
    opacity: 1;
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem);
  }
  80% {
    transform: translateX(-2rem);
  }
  100% {
    transform: translateX(0rem);
    opacity: 1;
  }
}

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem);
  }
  100% {
    transform: translateY(0rem);
    opacity: 1;
  }
}

/*:link is a psudo class, this is a state of the button class. Used to style classes unders special conditions*/
.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  /*Inline blocks are block elements but do not create a new line before and after the elements
  Inline block elements are treated as if they are text, so if we want to center the element we can just center the text*/
  display: inline-block;
  border-radius: 10rem;
  /*to animate all transitions*/
  transition: all 0.2s;
  position: relative;
  font-size: 1.6rem;
}

.btn:hover {
  transform: translateY(-0.3rem);
  /*x y blur colour*/
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
}

/*on click*/
.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
}

.btn--white {
  background-color: #ffffff;
  color: #777;
}

/*psudoelements, this after element creates a new element after the first element*/
.btn::after {
  content: "";
  display: inline-block;
  /*with respect to the btn class*/
  height: 100%;
  width: 100%;
  border-radius: 10rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all 0.4s;
}
.btn--white::after {
  background-color: white;
}

.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}

.btn--animated {
  animation: moveInBottom 1s ease-out 2s;
  /*applieds 0% animation before animation starts*/
  animation-fill-mode: backwards;
}
